FROM ubuntu:18.04
LABEL maintainer="Gigantum <hello@gigantum.io>"

# Copy libraries
COPY submodules/labmanager-common /opt/labmanager-common
COPY submodules/labmanager-service-labbook /opt/labmanager-service-labbook
ENV SHELL=/bin/bash

# Super instruction to install all dependencies
RUN apt-get -y update && \
    apt-get -y --no-install-recommends install git nginx supervisor wget openssl python3 python3-pip python3-distutils \
    gcc g++ gosu redis-server libjpeg-dev git-lfs python3-setuptools python3-dev libdpkg-perl && \
    cd /opt/labmanager-common/ && \
    pip3 install wheel && \
    pip3 install -r /opt/labmanager-common/requirements.txt && \
    python3 setup.py install && \
    pip3 install -r /opt/labmanager-service-labbook/requirements.txt && \
    pip3 install uwsgi && \
    apt-get -qq -y remove gcc g++ python3-setuptools python3-dev wget && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* /var/log/dpkg.log

# Setup ElasticSearch 
RUN apt-get update && apt-get -y install apt-transport-https openjdk-8-jre openjdk-8-jdk gnupg wget
RUN wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | apt-key add - 
RUN echo "deb https://artifacts.elastic.co/packages/5.x/apt stable main" | tee -a /etc/apt/sources.list.d/elastic-5.x.list 
RUN apt-get -y update && apt-get -y install elasticsearch  

# Setup lmcommon config file - should be written by automation before copy
COPY labmanager_resources/labmanager-config.yaml /etc/gigantum/labmanager.yaml

# Setup logging config file
COPY submodules/labmanager-common/lmcommon/logging/logging.json.default /etc/gigantum/logging.json

# Make needed directories
RUN mkdir -p /mnt/gigantum && mkdir /opt/redis

# Copy frontend
COPY submodules/labmanager-ui/build/ /var/www/

# Setup NGINX/uWSGI
COPY labmanager_resources/nginx_ui.conf /etc/nginx/sites-enabled/
COPY labmanager_resources/nginx_api.conf /etc/nginx/sites-enabled/
RUN rm /etc/nginx/sites-enabled/default

# Setup Redis
COPY labmanager_resources/redis.conf /opt/redis/redis.conf

# Setup Supervisord to launch both uwsgi and nginx
RUN mkdir -p /opt/log/supervisor && mkdir -p /opt/log/nginx && mkdir -p /opt/run && mkdir -p /opt/nginx && nginx && nginx -s reload && nginx -s quit
COPY labmanager_resources/supervisord_base.conf /etc/supervisor/supervisord.conf
COPY labmanager_resources/supervisord.conf /etc/supervisor/conf.d/supervisord.conf

COPY labmanager_resources/entrypoint.sh /usr/local/bin/entrypoint.sh
RUN chmod u+x /usr/local/bin/entrypoint.sh

# Setup demo labbook
COPY awful-intersections-demo.lbk /opt/awful-intersections-demo.lbk

ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]

# Expose Ports
EXPOSE 10000
EXPOSE 10001

# Start by firing up uwsgi, nginx, redis, and workers via supervisord
CMD ["/usr/bin/supervisord", "--nodaemon"]
