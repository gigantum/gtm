FROM ubuntu:16.04
MAINTAINER Gigantum <hello@gigantum.io>

# Install system level dependencies
RUN apt-get -y update; apt-get install -y software-properties-common; add-apt-repository ppa:jonathonf/python-3.6
RUN apt-get -y upgrade;
RUN apt-get -y update; apt-get -y install build-essential autotools-dev autoconf automake python3.6-dev libleveldb-dev libleveldb1v5 git nginx supervisor curl gosu redis-server python-dev

# Install node
RUN curl -sL https://deb.nodesource.com/setup_6.x | bash -
RUN apt-get -y install nodejs
RUN npm install -g serve

# Build Watchman
RUN git clone https://github.com/facebook/watchman.git; cd watchman; git checkout v4.7.0; ./autogen.sh; ./configure; make; make install

# Install pip with PPA 3.6 installation
RUN curl https://bootstrap.pypa.io/get-pip.py | python3.6

# Setup Global git config
RUN git config --global user.email "noreply@gigantum.io"; git config --global user.name "Gigantum AutoCommit"

# Copy requirements.txt files
COPY submodules/labmanager-common/requirements.txt /opt/labmanager-common_requirements.txt
COPY submodules/labmanager-service-labbook/requirements.txt /opt/labmanager-service-labbook_requirements.txt

# Install dependencies
RUN pip3.6 install -r /opt/labmanager-common_requirements.txt
RUN pip3.6 install -r /opt/labmanager-service-labbook_requirements.txt

# Setup lmcommon config file - should be written by automation before copy
COPY labmanager_dev_resources/labmanager-config.yaml /etc/gigantum/labmanager.yaml

# Setup logging config file
COPY submodules/labmanager-common/lmcommon/logging/logging.json.default /etc/gigantum/logging.json

# Make working dir and code mount points
RUN mkdir -p /mnt/gigantum; mkdir -p /mnt/repos

# Copy pre-compiled frontend app into container, will symlink to repo directory at container runtime
COPY frontend_resources/build/ /var/www/

# Setup Redis
RUN mkdir /opt/redis
COPY labmanager_resources/redis.conf /opt/redis/redis.conf

# Setup Supervisord to launch both uwsgi and nginx
RUN mkdir -p /opt/log/supervisor; mkdir -p /opt/log/nginx; mkdir -p /opt/run; mkdir -p /opt/nginx; nginx; nginx -s reload; nginx -s quit
COPY labmanager_resources/supervisord_base.conf /etc/supervisor/supervisord.conf
COPY labmanager_dev_resources/supervisord.conf /etc/supervisor/conf.d/supervisord.conf

COPY labmanager_dev_resources/entrypoint.sh /usr/local/bin/entrypoint.sh
RUN chmod u+x /usr/local/bin/entrypoint.sh

# Expose Ports
EXPOSE 5000
EXPOSE 3000

ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]

CMD ["/bin/bash"]
