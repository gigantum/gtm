FROM ubuntu:18.04
LABEL maintainer="Gigantum <hello@gigantum.io>"

# Copy requirements.txt files
COPY submodules/labmanager-common/requirements.txt /opt/labmanager-common_requirements.txt
COPY submodules/labmanager-common/requirements-testing.txt /opt/labmanager-common_requirements-testing.txt
COPY submodules/labmanager-service-labbook/requirements.txt /opt/labmanager-service-labbook_requirements.txt
COPY submodules/labmanager-service-labbook/requirements-testing.txt /opt/labmanager-service-labbook_requirements-testing.txt

ENV SHELL=/bin/bash

RUN apt-get -y update && \
    apt-get -y --no-install-recommends install git nginx supervisor wget openssl python3 python3-pip python3-distutils \
    vim emacs zip curl nodejs npm \
    gcc g++ gosu redis-server libjpeg-dev git-lfs python3-setuptools python3-dev libdpkg-perl && \
    pip3 install wheel

RUN pip3 install -r /opt/labmanager-common_requirements.txt && \
    pip3 install -r /opt/labmanager-common_requirements-testing.txt && \
    pip3 install -r /opt/labmanager-service-labbook_requirements.txt && \
    pip3 install -r /opt/labmanager-service-labbook_requirements-testing.txt && \
    pip3 install uwsgi

RUN npm install yarn --global

# Setup path and python path
ENV PYTHONPATH=$PYTHONPATH:/opt/project/gtmlib/resources/submodules/labmanager-common

# Setup lmcommon config file - should be written by automation before copy
COPY developer_resources/labmanager-config.yaml /etc/gigantum/labmanager.yaml

# Setup logging config file
COPY submodules/labmanager-common/lmcommon/logging/logging.json.default /etc/gigantum/logging.json

# Make working dir and code mount points
RUN mkdir -p /mnt/gigantum && mkdir /opt/node_build

# Setup ElasticSearch 
RUN apt-get update
RUN apt-get -y install apt-transport-https openjdk-8-jre openjdk-8-jdk 
RUN wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | apt-key add - 
RUN echo "deb https://artifacts.elastic.co/packages/5.x/apt stable main" | tee -a /etc/apt/sources.list.d/elastic-5.x.list 
RUN apt-get -y update && apt-get -y install elasticsearch  

# Setup Redis
RUN mkdir /opt/redis
COPY labmanager_resources/redis.conf /opt/redis/redis.conf

# Setup Supervisord to launch redis and rq
RUN mkdir -p /opt/log/supervisor; mkdir -p /opt/run;
COPY labmanager_resources/supervisord_base.conf /etc/supervisor/supervisord.conf
COPY developer_resources/supervisord.conf /etc/supervisor/conf.d/supervisord.conf

COPY developer_resources/entrypoint.sh /usr/local/bin/entrypoint.sh
RUN chmod u+x /usr/local/bin/entrypoint.sh

# Setup demo labbook
COPY awful-intersections-demo.lbk /opt/awful-intersections-demo.lbk

# Expose Ports
EXPOSE 10000
EXPOSE 10001

ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]

CMD ["/bin/bash"]
